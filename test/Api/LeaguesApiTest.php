<?php
/**
 * LeaguesApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * API-FOOTBALL
 *
 * +830 football leagues & cups. Livescore (15s), odds, events, line-ups, coachs, players, top scorers, standings, statistics, transfers, predictions. Documentation : https://www.api-football.com/documentation-v3
 *
 * OpenAPI spec version: v1
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.26
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace FootballApi\Client;

use FootballApi\Client\Api\FixturesApi;
use FootballApi\Client\Api\LeaguesApi;
use GuzzleHttp\Psr7\Response;

/**
 * LeaguesApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class LeaguesApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for v3LeaguesByLeagueId
     *
     * .
     *
     */
    public function testV3LeaguesByLeagueId()
    {
        $builder = new ClientBuilder('7df9a7303bmsh4401bf50555784cp170057jsn7c6a52b9a7b4');
//        $leagueAPI = new LeaguesApi($builder->getClient(), $builder->getConfiguration(), $builder->getSelector());
//        $res = $leagueAPI->v3LeaguesByLeagueIdAsync()->then(function (Response $rp) {
//            var_dump($rp->getBody()->getContents());
//        }, null)->wait();

        $fixture = new FixturesApi($builder->getClient(), $builder->getConfiguration(), $builder->getSelector());
        $res = $fixture->v3FixturesInProgressLiveScoreAsync(date: date('Y-m-d'), timezone: 'UTC')
            ->then(function (Response $response){
                echo($response->getBody()->getContents());
            }, null);
    }
}
